//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.0
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class PUSystemComponent : EditorActorComponent {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal PUSystemComponent(global::System.IntPtr cPtr, bool cMemoryOwn) : base(EditorRendererPINVOKE.PUSystemComponent_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(PUSystemComponent obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          EditorRendererPINVOKE.delete_PUSystemComponent(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public override void Update(float DeltaTime, float TotalTime) {
    EditorRendererPINVOKE.PUSystemComponent_Update(swigCPtr, DeltaTime, TotalTime);
  }

  public override void Destroy() {
    EditorRendererPINVOKE.PUSystemComponent_Destroy(swigCPtr);
  }

  public void SetSystemByTemplate(string inName) {
    EditorRendererPINVOKE.PUSystemComponent_SetSystemByTemplate(swigCPtr, inName);
    if (EditorRendererPINVOKE.SWIGPendingException.Pending) throw EditorRendererPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetForcedLooping(bool inLooping) {
    EditorRendererPINVOKE.PUSystemComponent_SetForcedLooping(swigCPtr, inLooping);
  }

  public void PlaySystem() {
    EditorRendererPINVOKE.PUSystemComponent_PlaySystem(swigCPtr);
  }

  public void StopSystem() {
    EditorRendererPINVOKE.PUSystemComponent_StopSystem(swigCPtr);
  }

  public void SetName(string inName) {
    EditorRendererPINVOKE.PUSystemComponent_SetName(swigCPtr, inName);
    if (EditorRendererPINVOKE.SWIGPendingException.Pending) throw EditorRendererPINVOKE.SWIGPendingException.Retrieve();
  }

  public PUSystemComponent() : this(EditorRendererPINVOKE.new_PUSystemComponent(), true) {
  }

}
